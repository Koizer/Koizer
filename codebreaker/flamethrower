#include <bits/stdc++.h>
using namespace std;

int poe(int N, int K, vector<int>NK);

int main(){

int N,K,n;
cin>>N>>K;

vector<int>g;

for(int i=0;i<N;i++){
    cin>>n;
    g.push_back(n);
}

cout<<poe(N,K,g);

return 0;
}


int poe(int N, int K, vector<int> NK){
    int mx = 0;
    int mxx=0;
    for(int i=0;i<(N-K)+1;i++){
        for(int j=0;j<K;j++){
            mxx+=NK[i+j];
        }
        mx=max(mx,mxx);
        mxx=0;
    }

    return mx;

}
vector<string> split(const string &str) {
    vector<string> tokens;

    string::size_type start = 0;
    string::size_type end = 0;

    while ((end = str.find(" ", start)) != string::npos) {
        tokens.push_back(str.substr(start, end - start));

        start = end + 1;
    }

    tokens.push_back(str.substr(start));

    return tokens;
}
